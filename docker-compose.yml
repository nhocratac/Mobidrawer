version: "3.8"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - mobidrawer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./IE213Backend
      dockerfile: Dockerfile
    container_name: mobidrawer-backend
    ports:
      - "8080:8080"  # Changed from expose to ports for consistency with current setup
    environment:
      # MongoDB connection settings
      - SPRING_DATA_MONGODB_URI=mongodb+srv://laidaynao901:S2bMWiZCDIqhES1Q@cluster0.qv15ecd.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - SPRING_DATA_MONGODB_DATABASE=IE213
      # Correct Redis connection settings
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      # Add these for proxy awareness
      - SERVER_FORWARD_HEADERS_STRATEGY=NATIVE
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    restart: always
    networks:
      - mobidrawer-network

  nginx:
    image: nginx:latest
    container_name: mobidrawer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/certbot:/var/www/certbot
    depends_on:
      - backend
    restart: always
    networks:
      - mobidrawer-network

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  mobidrawer-network:
    driver: bridge
